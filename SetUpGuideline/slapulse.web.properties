#application.properties
#Hibernate Configuration for JUnit tests
#Mon Nov 16 08:05:09 ICT 2009
#hibernate.connection.username=slapulse
#dao.type=hibernate
#hibernate.connection.password=PLyMLXSaYwBeZTHZMrEr2g==
#hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
#hibernate.connection.url=jdbc:mysql://<Server Name>:3306/slapulse?createDatabaseIfNotExist=true&amp;useUnicode=true&amp;characterEncoding=utf-8
#hibernate.connection.show_sql=false
#hibernate.connection.driver_class=com.mysql.jdbc.Driver
#hibernate.sql.show=true

#Hibernate Configuration for JUnit tests for Oracle Database Server
#Mon May 10 08:30:11 ICT 2010
#hibernate.connection.username=slapulse
#dao.type=hibernate
#hibernate.connection.password=F+BbYas+GWkOt8iEYzPi8g==
#hibernate.dialect=org.hibernate.dialect.Oracle10gDialect
#hibernate.connection.url=jdbc:oracle:thin:@<Server Name>:1521:slapulse
#hibernate.connection.show_sql=false
#hibernate.connection.driver_class=oracle.jdbc.driver.OracleDriver
#hibernate.sql.show=true
#hibernate.generate_schema=create

#Hibernate Configuration for JUnit tests for MSSQL 2000 & 2005 Database Server
#Mon May 12 14:30:11 ICT 2010
# the following take care by Websphere datasource


dao.type=hibernate
# hibernate connection credentials
hibernate.connection.username=sla
hibernate.connection.password=filenetP8
# hibernate url
hibernate.connection.url=jdbc:postgresql://localhost:5432/SLAPULSE
# hibernate driver class
hibernate.connection.driver_class=org.postgresql.Driver
# hibernate dialect
#hibernate.dialect=org.hibernate.dialect.SQLServerDialect
hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
hibernate.connection.show_sql=false
# tell hibernate to show SQL. DO NOT USE - change org.hibernate.SQL=debug in logback.xml instead
hibernate.sql.show=true
# hibernate validate schema
hibernate.generate_schema=validate
# hibernate schema
hibernate.default_schema=public

#Hibernate Configuration for JUnit tests for DB2 Database Server
#Mon May 13 9:11:25 ICT 2010
#hibernate.connection.username=administrator
#dao.type=hibernate
#hibernate.connection.password=Rrc2cUwbsng=
#hibernate.dialect=org.hibernate.dialect.DB2Dialect
#hibernate.connection.url=jdbc:db2://<Server Name>:50000/slapulse
#hibernate.connection.show_sql=false
#hibernate.connection.driver_class=com.ibm.db2.jcc.DB2Driver
#hibernate.sql.show=true

#Hibernate Configuration for JUnit tests for MySQL Server
#Fri May 20 16:24:14 GMT+07:00 2011
#hibernate.connection.username=slapulse
#dao.type=hibernate
#hibernate.connection.password=F+BbYas+GWkOt8iEYzPi8g\=\=
#hibernate.dialect=org.hibernate.dialect.MySQLDialect
#hibernate.connection.url=jdbc:mysql://localhost:3306/slapulse?autoReconnect=true
#hibernate.connection.show_sql=false
#hibernate.connection.driver_class=com.mysql.jdbc.Driver


default-datasource-bean=SLAPulseDataSource
# DAO to use to send messages back to Saigon. Use slaUpdatePropertiesDAOJMS for JMS (recommended)
slaUpdatePropertiesDAO=slaUpdatePropertiesDAOJMS

# turn on incoming JMS
is.jms=false
# enable durable subscriptions. This must be set to true in a WAS cluster otherwise messages will be delivered to both WPE nodes
is.jms.durable=false
# JNDI location class
# search.worker.jndi.class=org.apache.naming.java.javaURLContextFactory
search.worker.jndi.class=org.jboss.naming.remote.client.InitialContextFactory
# JNDI location URL
#search.worker.jndi.url=localhost
search.worker.jndi.url=remote://localhost:4447
#search.worker.jms.connection_factory=jms/hibernateSearchConnectionFactory
search.worker.jms.connection_factory=jms/RemoteConnectionFactory
search.worker.jms.queue=jms/queue/test

saigon.ws.delay.ms=0

# turn on outgoing JMS. Must also use slaUpdatePropertiesDAOJMS
is.jms.send=false
jms.queue.send=jms/topic/test
# enables cluster mode 
is.clustered=false

# table prefix for quartz tables
org.quartz.jobStore.tablePrefix=qrtz_
# Can be any string, but must be unique for all schedulers working as if they are the same 'logical' Scheduler within a cluster. You may use the value "AUTO" as the instanceId if you wish the Id to be generated for you.
org.quartz.scheduler.instanceId=AUTO
# maximum number of threads the scheduler can have
scheduler.max.threads.count=3
# Setting the following to true may help with database deadlocks
org.quartz.acquireTriggersWithinLock=false
# selectWithLockSQL value externalised to allow easier configuration for differing Databases (following is suitable for Oracle)
#org.quartz.selectWithLockSQL=SELECT * FROM {0}LOCKS WHERE LOCK_NAME = ? FOR UPDATE
org.quartz.selectWithLockSQL=SELECT * FROM {0}locks WHERE lock_name = ? FOR UPDATE
